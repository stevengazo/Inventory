@using Entities;
@using Business;

<!--Inyección de dependencia de navegación-->
@inject NavigationManager Nav



<EditForm Model="@oProduct">
    <div class="form-group">
        <label>Refencia:@oProduct.CategoryId </label>
    </div>
    <div class="form-group">
        <label>Nombre Producto: </label>
        <InputText @bind-Value="oProduct.ProductName" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descripción: </label>
        <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" />
    </div>
    <div class="form-group">
        <label>Categoría: </label>
        <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
            @foreach (var category in Categories)
            {
                <option value="@category.CategoryId"> @category.CategoryName</option>
            }
        </InputSelect>
    </div>
    <input type="button" value="Actualizar Producto" @onclick="UpdateProduct" />

</EditForm>


@code{
    [Parameter]
    public string Id { get; set; }

    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> Categories = new List<CategoryEntity>();


    protected override async Task OnInitializedAsync()
    {
        Categories = B_Category.CategoryList();
        oProduct = B_Product.ProductById(Id);
    }

    private void UpdateProduct()
    {
        B_Product.UpdateProduct(oProduct);
        Nav.NavigateTo("product/list");
    }

}